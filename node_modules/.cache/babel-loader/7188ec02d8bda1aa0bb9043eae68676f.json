{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Netflix\\\\Netflix\\\\src\\\\components\\\\accordion\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, createContext } from 'react';\nimport { Body, Title, Header, Container, Inner, Item, Frame } from './styles/accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleContext = /*#__PURE__*/createContext();\nexport default function Accordion(_ref) {\n  let {\n    children,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, { ...restProps,\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Accordion;\n\nAccordion.Frame = function AccordionFrame(_ref2) {\n  let {\n    children,\n    ...restProps\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Frame, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\nAccordion.Item = _s(function AccordionItem(_ref3) {\n  _s();\n\n  let {\n    children,\n    ...restProps\n  } = _ref3;\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    children: /*#__PURE__*/_jsxDEV(Item, { ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}, \"tCX/VzjJ88VBg9+I9/DmKaZ9kqM=\");\n\nAccordion.Title = function AccordionTitle(_ref4) {\n  let {\n    children,\n    ...restProps\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(Title, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n\nAccordion.Header = _s2(function AccordionHeader(_ref5) {\n  _s2();\n\n  let {\n    children,\n    ...restProps\n  } = _ref5;\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    onClick: () => setToggleShow(!toggleShow),\n    ...restProps,\n    children: [children, toggleShow ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/icons/close-slim.png\",\n      alt: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/icons/add.png\",\n      alt: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}, \"TK/oZdgUDCvLrKWRR9mTHBf6KYY=\");\nAccordion.Body = _s3(function AccordionBody(_ref6) {\n  _s3();\n\n  let {\n    children,\n    ...restProps\n  } = _ref6;\n  const {\n    toggleShow\n  } = useContext(ToggleContext);\n  return toggleShow ? /*#__PURE__*/_jsxDEV(Body, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 25\n  }, this) : null;\n}, \"3GdtCldLvewOgpnz6EBMvQFgAf4=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["C:/Users/HP/Downloads/Netflix/Netflix/src/components/accordion/index.js"],"names":["React","useState","useContext","createContext","Body","Title","Header","Container","Inner","Item","Frame","ToggleContext","Accordion","children","restProps","AccordionFrame","AccordionItem","toggleShow","setToggleShow","AccordionTitle","AccordionHeader","AccordionBody"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,OAA3D;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,SAA9B,EAAyCC,KAAzC,EAAgDC,IAAhD,EAAsDC,KAAtD,QAAmE,oBAAnE;;AAEA,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;AAEA,eAAe,SAASS,SAAT,OAA+C;AAAA,MAA5B;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA4B;AAC1D,sBACI,QAAC,SAAD,OAAeA,SAAf;AAAA,2BACI,QAAC,KAAD;AAAA,gBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KANuBD,S;;AAQxBA,SAAS,CAACF,KAAV,GAAkB,SAASK,cAAT,QAAoD;AAAA,MAA5B;AAAEF,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA4B;AAClE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD;;AAIAD,SAAS,CAACH,IAAV,MAAiB,SAASO,aAAT,QAAmD;AAAA;;AAAA,MAA5B;AAAEH,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA4B;AAChE,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA/B;AAAA,2BACI,QAAC,IAAD,OAAUJ,SAAV;AAAA,gBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARD;;AAUAD,SAAS,CAACP,KAAV,GAAkB,SAASc,cAAT,QAAoD;AAAA,MAA5B;AAAEN,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA4B;AAClE,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD;;AAIAD,SAAS,CAACN,MAAV,OAAmB,SAASc,eAAT,QAAqD;AAAA;;AAAA,MAA5B;AAAEP,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA4B;AACpE,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgChB,UAAU,CAACS,aAAD,CAAhD;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMO,aAAa,CAAC,CAACD,UAAF,CAApC;AAAA,OAAuDH,SAAvD;AAAA,eACKD,QADL,EAEKI,UAAU,gBACP;AAAK,MAAA,GAAG,EAAC,8BAAT;AAAwC,MAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAK,MAAA,GAAG,EAAC,uBAAT;AAAiC,MAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAbD;AAeAL,SAAS,CAACR,IAAV,OAAiB,SAASiB,aAAT,QAAmD;AAAA;;AAAA,MAA5B;AAAER,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA4B;AAChE,QAAM;AAAEG,IAAAA;AAAF,MAAiBf,UAAU,CAACS,aAAD,CAAjC;AAEA,SAAOM,UAAU,gBAAG,QAAC,IAAD,OAAUH,SAAV;AAAA,cAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAH,GAA4C,IAA7D;AACH,CAJD","sourcesContent":["import React, { useState, useContext, createContext } from 'react';\r\nimport { Body, Title, Header, Container, Inner, Item, Frame } from './styles/accordion';\r\n\r\nconst ToggleContext = createContext();\r\n\r\nexport default function Accordion({ children, ...restProps }) {\r\n    return (\r\n        <Container {...restProps}>\r\n            <Inner>{children}</Inner>\r\n        </Container>\r\n    )\r\n}\r\n\r\nAccordion.Frame = function AccordionFrame({ children, ...restProps }) {\r\n    return <Frame {...restProps}>{children}</Frame>;\r\n}\r\n\r\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\r\n    const [toggleShow, setToggleShow] = useState(false);\r\n    \r\n    return (\r\n        <ToggleContext.Provider value={{ toggleShow, setToggleShow }}>\r\n            <Item {...restProps}>{children}</Item>\r\n        </ToggleContext.Provider>\r\n    )\r\n}\r\n\r\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\r\n    return <Title {...restProps}>{children}</Title>;\r\n}\r\n\r\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\r\n    const { toggleShow, setToggleShow } = useContext(ToggleContext);\r\n    \r\n    return (\r\n        <Header onClick={() => setToggleShow(!toggleShow)} {...restProps}>\r\n            {children}\r\n            {toggleShow ? (\r\n                <img src=\"/images/icons/close-slim.png\" alt=\"Close\" />\r\n            ) : (\r\n                <img src=\"/images/icons/add.png\" alt=\"Open\" />\r\n            )}\r\n        </Header>\r\n    )\r\n}\r\n\r\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\r\n    const { toggleShow } = useContext(ToggleContext);\r\n    \r\n    return toggleShow ? <Body {...restProps}>{children}</Body> : null;\r\n}"]},"metadata":{},"sourceType":"module"}