{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Netflix\\\\Netflix\\\\src\\\\pages\\\\signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"../components\";\nimport { HeaderContainer } from \"../containers/header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signin() {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSignin = event => {\n    event.preventDefault(); // call in here to firebase to authenticate the user\n    // if there's an error, populate the error state\n  };\n\n  return /*#__PURE__*/_jsxDEV(HeaderContainer, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Title, {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Form.Error, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form.Base, {\n        onSubmit: handleSignin,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          placeholder: \"Email address\",\n          value: emailAddress,\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setEmailAddress(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          type: \"password\",\n          value: password,\n          autoComplete: \"off\",\n          placeholder: \"Password\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Submit, {\n          disabled: false,\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [\"New to Netflix? \", /*#__PURE__*/_jsxDEV(Form.Link, {\n            to: \"/signup\",\n            children: \"Sign up now.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.TextSmall, {\n          children: \"This page is protected by Google reCAPTCHA.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signin, \"G15BftAGXkowpK2k+BEO7wAVGWI=\");\n\n_c = Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["C:/Users/HP/Downloads/Netflix/Netflix/src/pages/signin.js"],"names":["React","useState","Form","HeaderContainer","Signin","error","setError","emailAddress","setEmailAddress","password","setPassword","handleSignin","event","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN,GAD8B,CAG9B;AACA;AACD,GALD;;AAOA,sBACE,QAAC,eAAD;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGR,KAAK,iBAAI,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA,cAFZ,eAIE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,QAAQ,EAAEM,YAArB;AAAmC,QAAA,MAAM,EAAC,MAA1C;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AACE,UAAA,WAAW,EAAC,eADd;AAEE,UAAA,KAAK,EAAEJ,YAFT;AAGE,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEO,cAAAA;AAAF,aAAD;AAAA,mBAAgBN,eAAe,CAACM,MAAM,CAACC,KAAR,CAA/B;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,IAAD,CAAM,KAAN;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAEN,QAFT;AAGE,UAAA,YAAY,EAAC,KAHf;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEK,cAAAA;AAAF,aAAD;AAAA,mBAAgBJ,WAAW,CAACI,MAAM,CAACC,KAAR,CAA3B;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,gBANF,eAaE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,QAAQ,EAAE,KAAvB;AAA8B,UAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAiBE,QAAC,IAAD,CAAM,IAAN;AAAA,sDACkB,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,EAAE,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAoBE,QAAC,IAAD,CAAM,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA7CuBX,M;;KAAAA,M","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"../components\";\r\nimport { HeaderContainer } from \"../containers/header\";\r\n\r\nexport default function Signin() {\r\n  const [error, setError] = useState(\"\");\r\n  const [emailAddress, setEmailAddress] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignin = (event) => {\r\n    event.preventDefault();\r\n\r\n    // call in here to firebase to authenticate the user\r\n    // if there's an error, populate the error state\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <Form>\r\n        <Form.Title>Sign In</Form.Title>\r\n        {error && <Form.Error>{error}</Form.Error>}\r\n\r\n        <Form.Base onSubmit={handleSignin} method=\"POST\">\r\n          <Form.Input\r\n            placeholder=\"Email address\"\r\n            value={emailAddress}\r\n            onChange={({ target }) => setEmailAddress(target.value)}\r\n          />\r\n          <Form.Input\r\n            type=\"password\"\r\n            value={password}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n          <Form.Submit disabled={false} type=\"submit\">\r\n            Sign In\r\n          </Form.Submit>\r\n\r\n          <Form.Text>\r\n            New to Netflix? <Form.Link to=\"/signup\">Sign up now.</Form.Link>\r\n          </Form.Text>\r\n          <Form.TextSmall>\r\n            This page is protected by Google reCAPTCHA.\r\n          </Form.TextSmall>\r\n        </Form.Base>\r\n      </Form>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}